from types import ModuleType
from typing import Union, Callable, Optional, Any

from Crypto.PublicKey.RSA import RsaKey

class PKCS1OAEP_Cipher:
    def __init__(self, key: RsaKey, hashAlgo: Optional[Any]=None,
                 mgfunc: Optional[Callable]=None, label: Union[bytes, bytearray, memoryview]=b"",
                 randfunc: Optional[Callable]=None) -> None: ...
    def can_encrypt(self) -> bool: ...
    def can_decrypt(self) -> bool: ...
    def encrypt(self, message: Union[bytes, bytearray, memoryview]) -> bytes: ...
    def decrypt(self, ciphertext: Union[bytes, bytearray, memoryview]) -> bytes: ...

def new(key, hashAlgo: Optional[Any]=..., mgfunc: Optional[Callable]=..., label: Optional[bytes]=..., randfunc: Optional[Callable]=...) -> PKCS1OAEP_Cipher: ...
